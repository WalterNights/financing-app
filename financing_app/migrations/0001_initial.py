# Generated by Django 5.2.3 on 2025-06-13 01:26

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('student', 'Student'), ('admin', 'Admin')], default='student', max_length=10)),
                ('user_cc', models.CharField(max_length=20, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CareerPeriodPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(max_length=50)),
                ('tuition_fee', models.DecimalField(decimal_places=2, max_digits=12)),
                ('base_discount', models.FloatField()),
                ('deadline', models.DateField()),
                ('penalty', models.FloatField()),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financing_app.career')),
            ],
        ),
        migrations.CreateModel(
            name='FinancingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_initial_period', models.DateField()),
                ('date_start', models.DateTimeField(auto_now_add=True)),
                ('down_payment', models.DecimalField(decimal_places=2, max_digits=12)),
                ('interest_rate', models.FloatField(default=1.8)),
                ('administration_fee', models.FloatField(default=5.0)),
                ('number_fee', models.IntegerField(default=6)),
                ('discount_applied', models.FloatField(default=0.0)),
                ('tuition_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financing_app.careerperiodpricing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Installment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_fee', models.PositiveIntegerField()),
                ('value_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expiration_date', models.DateField()),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pendiente'), ('Paid', 'Pagada'), ('Overdue', 'En mora')], default='Pending', max_length=20)),
                ('arrears', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('financing_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installments', to='financing_app.financingrequest')),
            ],
        ),
    ]
